<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Form_Work" width="1280" height="720" titletext="Form_Work">
    <Layouts>
      <Layout width="1280" height="720" screenid="Desktop_screen"/>
    </Layouts>
    <Objects>
      <Dataset id="ds_search">
        <ColumnInfo>
          <Column id="searchType" type="STRING" size="256"/>
          <Column id="keyword" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_list"/>
    </Objects>
    <Script type="xscript5.1"><![CDATA[
this.Button00_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
  this.fnSearch();
};

//처리콜백 함수
this.fnCallback = function(svcID,errorCode,errorMsg)
{
  // 에러 시 화면 처리 내역
  if(errorCode != 0)
  {
    this.alert(errorCode+"\n"+errorMsg);
    return;
  }

  switch(svcID)
  {
    case "search":
      if(this.ds_list.rowcount < 1){
        this.alert("조회된 결과가 없습니다.");
      }

      break;
  }
};

//데이터 조회 트랜잭션
this.fnSearch = function ()
{
  // 조회조건 셋팅
  this.ds_search.setColumn(0, "searchType", this.Combo00.value);
  this.ds_search.setColumn(0, "keyword"  , this.Edit00.text);

  var strSvcId    = "search";
  var strSvcUrl   = "svc::selectSampleList.do";
  var inData      = "input1=ds_search";
  var outData     = "ds_list=output1";
  var strArg      = "";
  var callBackFnc = "fnCallback";
  var isAsync     = true;

  this.transaction(strSvcId ,   // transaction을 구분하기 위한 svc id값
      strSvcUrl ,       // trabsaction을 요청할 주소
      inData ,         // 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭
      outData ,         // 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭
      strArg,         // 입력값으로 보낼 arguments, a=b
      callBackFnc,       // transaction의 결과를 받을 Function 이름
      isAsync);         // 비동기통신 여부 [생략가능]
};]]></Script>
  </Form>
</FDL>
